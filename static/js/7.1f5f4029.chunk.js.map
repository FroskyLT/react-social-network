{"version":3,"sources":["components/Login/login.module.scss","assets/videos/Samurai.webm","selectors/login-selectors.js","utils/validators/validators.js","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/common/CardContainer/CardContainer.jsx","components/common/CardContainer/card-container.module.scss"],"names":["module","exports","getErrorSelector","state","auth","error","getIsLoggedSelector","isLogged","getCaptchaUrl","captchaUrl","required","value","email","test","LoginForm","props","initialValues","password","captcha","validate","values","errors","onSubmit","setSubmitting","loginHandler","isSubmitting","className","styles","form","form__group","id","type","name","autoComplete","form__field","htmlFor","form__label","form__label_big","form__error","component","src","alt","form__captcha","disabled","form__submit","form__submit_disabled","Login","login","autoPlay","muted","loop","login__background","video","CardContainer","login__form","login__heading","login__heading_colored","connect","authenticateMe","to","authenticateHandler","containerBlock","children"],"mappings":"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","file":"static/js/7.1f5f4029.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__Jj3XY\",\"login__background\":\"login_login__background__9mevt\",\"login__form\":\"login_login__form__2Wv9s\",\"login__heading\":\"login_login__heading__21vFL\",\"login__heading_colored\":\"login_login__heading_colored__VlO1M\",\"form\":\"login_form__16xn1\",\"form__group\":\"login_form__group__2dB5_\",\"form__field\":\"login_form__field__1ARDh\",\"form__label\":\"login_form__label__36AIs\",\"form__label_big\":\"login_form__label_big__3txFP\",\"form__captcha\":\"login_form__captcha__iReGF\",\"form__submit\":\"login_form__submit__1wiKC\",\"form__submit_disabled\":\"login_form__submit_disabled__1T46X\",\"form__error\":\"login_form__error__2aZ_W\"};","module.exports = __webpack_public_path__ + \"static/media/Samurai.10444ca9.webm\";","export const getErrorSelector = (state) => state.auth.error;\r\nexport const getIsLoggedSelector = (state) => state.auth.isLogged;\r\nexport const getCaptchaUrl = (state) => state.auth.captchaUrl;\r\n","export const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return;\r\n};\r\n\r\nexport const required = (value) => {\r\n  if (!value) return \"Required\";\r\n  return;\r\n};\r\n\r\nexport const email = (value) => {\r\n  if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value))\r\n    return \"Invalid email address\";\r\n  return;\r\n};\r\n","import React from \"react\";\r\nimport CardContainer from \"../common/CardContainer/CardContainer\";\r\nimport styles from \"./login.module.scss\";\r\nimport video from \"../../assets/videos/Samurai.webm\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { email, required } from \"../../utils/validators/validators\";\r\n\r\nconst LoginForm = (props) => {\r\n  const validate = (values) => {\r\n    const errors = {};\r\n\r\n    if (required(values.email) || email(values.email))\r\n      errors.email = required(values.email) || email(values.email);\r\n    if (required(values.password)) errors.password = required(values.password);\r\n\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", captcha: \"\" }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        props.loginHandler(values);\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ isSubmitting, values }) => (\r\n        <Form className={styles.form}>\r\n          <div className={styles.form__group}>\r\n            <Field\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              autoComplete=\"off\"\r\n              className={styles.form__field}\r\n              required\r\n            />\r\n            <label\r\n              htmlFor=\"email\"\r\n              className={\r\n                values.email\r\n                  ? styles.form__label\r\n                  : `${styles.form__label} ${styles.form__label_big}`\r\n              }\r\n            >\r\n              email\r\n            </label>\r\n            <div className={styles.form__error}>\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className={styles.form__error}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={styles.form__group}>\r\n            <Field\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className={styles.form__field}\r\n              required\r\n            />\r\n            <label\r\n              htmlFor=\"password\"\r\n              className={\r\n                values.password\r\n                  ? styles.form__label\r\n                  : `${styles.form__label} ${styles.form__label_big}`\r\n              }\r\n            >\r\n              password\r\n            </label>\r\n            <div className={styles.form__error}>\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className={styles.form__error}\r\n              />\r\n            </div>\r\n          </div>\r\n          {props.captchaUrl && (\r\n            <div className={styles.form__group}>\r\n              <Field\r\n                id=\"captcha\"\r\n                type=\"text\"\r\n                name=\"captcha\"\r\n                autoComplete=\"off\"\r\n                className={styles.form__field}\r\n                required\r\n              />\r\n              <label\r\n                htmlFor=\"captcha\"\r\n                className={\r\n                  values.captcha\r\n                    ? styles.form__label\r\n                    : `${styles.form__label} ${styles.form__label_big}`\r\n                }\r\n              >\r\n                {\"captcha\"}\r\n              </label>\r\n              <img\r\n                src={props.captchaUrl}\r\n                alt=\"\"\r\n                className={styles.form__captcha}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className={styles.form__error}>{props.error && props.error}</div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className={\r\n              !isSubmitting\r\n                ? styles.form__submit\r\n                : `${styles.form__submit} ${styles.form__submit_disabled}`\r\n            }\r\n          >\r\n            sign in\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div className={styles.login}>\r\n      <video autoPlay muted loop className={styles.login__background}>\r\n        <source src={video} type=\"video/webm\" />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <CardContainer className={styles.login__form}>\r\n        <h1 className={styles.login__heading}>\r\n          {\"Welcome home \"}\r\n          <span className={styles.login__heading_colored}>samurai</span>\r\n        </h1>\r\n        <LoginForm\r\n          loginHandler={props.loginHandler}\r\n          error={props.error}\r\n          captchaUrl={props.captchaUrl}\r\n        />\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport { authenticateMe, login } from \"../../redux/reducers/authReducer\";\r\nimport {\r\n  getCaptchaUrl,\r\n  getErrorSelector,\r\n  getIsLoggedSelector,\r\n} from \"../../selectors/login-selectors\";\r\nimport Login from \"./Login\";\r\n\r\nconst LoginContainer = (props) => {\r\n  const { isLogged, error, captchaUrl, login, authenticateMe } = props;\r\n\r\n  if (isLogged) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Login\r\n      error={error}\r\n      captchaUrl={captchaUrl}\r\n      loginHandler={login}\r\n      authenticateHandler={authenticateMe}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: getErrorSelector(state),\r\n  isLogged: getIsLoggedSelector(state),\r\n  captchaUrl: getCaptchaUrl(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { authenticateMe, login })(\r\n  LoginContainer\r\n);\r\n","import React from \"react\";\r\nimport styles from \"./card-container.module.scss\";\r\n\r\nexport const CardContainer = (props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.className\r\n          ? `${styles.containerBlock} ${props.className}`\r\n          : styles.containerBlock\r\n      }\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardContainer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBlock\":\"card-container_containerBlock__a8lUw\"};"],"sourceRoot":""}